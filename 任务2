一、用简单一点的例子来讲：
•一个公司有几个甚至十几个人共同合作开发一款项目的时候，公司对项目代码有明确规范，不可能再像学校做的小项目一样，你觉得哪个同学的代码写的不好，
或者和你的代码有冲突，“Duang”直接给别人改掉或删掉，也就是想怎么改就怎么改。这种情况对于十几个人合作的项目来说肯定是不行的。这个时候就需要版本的控制
•2)版本控制：•通俗来说：
你可以在这个版本管理工具上清楚的看到每次不同的人在同一项目上所做的修改说明，并且可以选择下载你需要的版本下来再进行维护。
版本控制分为集中式版本控制和分布式版本控制
•1）集中式的版本控制：版本库是集中存放在中央服务器的，而干活的时候，用的都是自己的电脑，所以要先从中央服务器取得最新的版本，然后开始干活，干完活了，再把自己的活推送给中央服务器。
中央服务器就好比是一个图书馆，你要改一本书，必须先从图书馆借出来，然后回到家自己改，改完了，再放回图书馆。
集中式版本控制系统最大的毛病就是必须联网才能工作，如果在局域网内还好，带宽够大，速度够快，可如果在互联网上，遇到网速慢的话，可能提交一个10M的文件就需要5分钟。
分布式版本控制系统：其根本没有“中央服务器”，每个人的电脑上都是一个完整的版本库，这样，你工作的时候，就不需要联网了，因为版本库就在你自己的电脑上。既然每个人电脑上都有一个完整的版本库，
那多个人如何协作呢？比方说你在自己电脑上改了文件A，你的同事也在他的电脑上改了文件A，这时，你们俩之间只需把各自的修改推送给对方，就可以互相看到对方的修改了。
2、分布式版本控制和集中式版本控制区别：
1）分布式版本控制系统的安全性要高很多，因为每个人电脑里都有完整的版本库，某一个人的电脑坏掉了不要紧，随便从其他人那里复制一个就可以了。
2）集中式版本控制系统的中央服务器要是出了问题，所有人都没法干活了。
     github大大方便了团队合作编码
